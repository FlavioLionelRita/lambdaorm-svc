{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Index": {
				"properties": {
					"name": {
						"type": "string"
					},
					"fields": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"fields"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Property": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"length": {
						"type": "number",
						"format": "double"
					},
					"nullable": {
						"type": "boolean"
					},
					"primaryKey": {
						"type": "boolean"
					},
					"autoincrement": {
						"type": "boolean"
					},
					"default": {
						"type": "string"
					},
					"readValue": {
						"type": "string"
					},
					"writeValue": {
						"type": "string"
					},
					"enum": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Relation": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"composite": {
						"type": "boolean"
					},
					"from": {
						"type": "string"
					},
					"entity": {
						"type": "string"
					},
					"to": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"type",
					"from",
					"entity",
					"to"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Dependent": {
				"properties": {
					"entity": {
						"type": "string"
					},
					"relation": {
						"$ref": "#/components/schemas/Relation"
					}
				},
				"required": [
					"entity",
					"relation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Constraint": {
				"properties": {
					"message": {
						"type": "string"
					},
					"condition": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"condition"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Entity": {
				"properties": {
					"name": {
						"type": "string"
					},
					"extends": {
						"type": "string"
					},
					"abstract": {
						"type": "boolean"
					},
					"singular": {
						"type": "string"
					},
					"uniqueKey": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"indexes": {
						"items": {
							"$ref": "#/components/schemas/Index"
						},
						"type": "array"
					},
					"primaryKey": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"properties": {
						"items": {
							"$ref": "#/components/schemas/Property"
						},
						"type": "array"
					},
					"relations": {
						"items": {
							"$ref": "#/components/schemas/Relation"
						},
						"type": "array"
					},
					"dependents": {
						"items": {
							"$ref": "#/components/schemas/Dependent"
						},
						"type": "array"
					},
					"constraints": {
						"items": {
							"$ref": "#/components/schemas/Constraint"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"uniqueKey",
					"indexes",
					"primaryKey",
					"properties",
					"relations",
					"dependents"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnumValue": {
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {}
				},
				"required": [
					"name",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Enum": {
				"properties": {
					"name": {
						"type": "string"
					},
					"values": {
						"items": {
							"$ref": "#/components/schemas/EnumValue"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DataSource": {
				"properties": {
					"name": {
						"type": "string"
					},
					"dialect": {
						"type": "string"
					},
					"mapping": {
						"type": "string"
					},
					"connection": {}
				},
				"required": [
					"name",
					"dialect",
					"mapping",
					"connection"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PropertyMapping": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"length": {
						"type": "number",
						"format": "double"
					},
					"nullable": {
						"type": "boolean"
					},
					"primaryKey": {
						"type": "boolean"
					},
					"autoincrement": {
						"type": "boolean"
					},
					"default": {
						"type": "string"
					},
					"readValue": {
						"type": "string"
					},
					"writeValue": {
						"type": "string"
					},
					"enum": {
						"type": "string"
					},
					"mapping": {
						"type": "string"
					},
					"key": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"type",
					"mapping"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EntityMapping": {
				"properties": {
					"name": {
						"type": "string"
					},
					"extends": {
						"type": "string"
					},
					"abstract": {
						"type": "boolean"
					},
					"singular": {
						"type": "string"
					},
					"uniqueKey": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"indexes": {
						"items": {
							"$ref": "#/components/schemas/Index"
						},
						"type": "array"
					},
					"primaryKey": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"properties": {
						"items": {
							"$ref": "#/components/schemas/PropertyMapping"
						},
						"type": "array"
					},
					"relations": {
						"items": {
							"$ref": "#/components/schemas/Relation"
						},
						"type": "array"
					},
					"dependents": {
						"items": {
							"$ref": "#/components/schemas/Dependent"
						},
						"type": "array"
					},
					"constraints": {
						"items": {
							"$ref": "#/components/schemas/Constraint"
						},
						"type": "array"
					},
					"mapping": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"uniqueKey",
					"indexes",
					"primaryKey",
					"properties",
					"relations",
					"dependents",
					"mapping"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Mapping": {
				"properties": {
					"extends": {
						"type": "string"
					},
					"mapping": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"entities": {
						"items": {
							"$ref": "#/components/schemas/EntityMapping"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"entities"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RuleDataSource": {
				"properties": {
					"name": {
						"type": "string"
					},
					"condition": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Stage": {
				"properties": {
					"name": {
						"type": "string"
					},
					"dataSources": {
						"items": {
							"$ref": "#/components/schemas/RuleDataSource"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"dataSources"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SchemaDataEntity": {
				"properties": {
					"entity": {
						"type": "string"
					},
					"rows": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"entity",
					"rows"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SchemaData": {
				"properties": {
					"entities": {
						"items": {
							"$ref": "#/components/schemas/SchemaDataEntity"
						},
						"type": "array"
					}
				},
				"required": [
					"entities"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "lambdaorm-svc",
		"version": "0.1.14",
		"description": "service of lambda orm",
		"license": {
			"name": "Apache-2.0 License"
		},
		"contact": {
			"name": "Flavio Lionel Rita ",
			"email": "flaviolrita@hotmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/metadata": {
			"get": {
				"operationId": "Metadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/model": {
			"get": {
				"operationId": "Model",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/parameters": {
			"get": {
				"operationId": "Parameters",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/constraints": {
			"get": {
				"operationId": "Constraints",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sentence": {
			"get": {
				"operationId": "Sentence",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "stage",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/run": {
			"post": {
				"operationId": "Run",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"expression"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "stage",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/ping": {
			"get": {
				"operationId": "Ping",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"general"
				],
				"security": [],
				"parameters": []
			}
		},
		"/health": {
			"get": {
				"operationId": "Health",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"general"
				],
				"security": [],
				"parameters": []
			}
		},
		"/metrics": {
			"get": {
				"operationId": "Metrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"general"
				],
				"security": [],
				"parameters": []
			}
		},
		"/schema/entities": {
			"get": {
				"operationId": "Entities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Entity"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"schema"
				],
				"security": [],
				"parameters": []
			}
		},
		"/schema/enums": {
			"get": {
				"operationId": "Enums",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Enum"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"schema"
				],
				"security": [],
				"parameters": []
			}
		},
		"/schema/datasources": {
			"get": {
				"operationId": "DataSources",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DataSource"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"schema"
				],
				"security": [],
				"parameters": []
			}
		},
		"/schema/mappings": {
			"get": {
				"operationId": "Mappings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Mapping"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"schema"
				],
				"security": [],
				"parameters": []
			}
		},
		"/schema/stages": {
			"get": {
				"operationId": "Stages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Stage"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"schema"
				],
				"security": [],
				"parameters": []
			}
		},
		"/stage": {
			"get": {
				"operationId": "List",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"stage"
				],
				"security": [],
				"parameters": []
			}
		},
		"/stage/{stage}/exists": {
			"get": {
				"operationId": "Exists",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"stage"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "stage",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/stage/{stage}/export": {
			"get": {
				"operationId": "Export",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SchemaData"
								}
							}
						}
					}
				},
				"tags": [
					"stage"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "stage",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/stage/{stage}/import": {
			"post": {
				"operationId": "Import",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"stage"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "stage",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SchemaData"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}